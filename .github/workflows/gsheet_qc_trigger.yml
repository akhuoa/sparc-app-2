name: Google Sheets Quality Control Trigger

on:
  schedule:
    - cron: "0 19 * * *"

  workflow_dispatch:

jobs:
  fetch-gsheet:
    runs-on: ubuntu-latest
    outputs:
      gsheet-data: ${{ steps.get_data.outputs.results }}
    steps:
      - id: "get_data"
        uses: jroehl/gsheet.action@release
        with:
          spreadsheetId: ${{ secrets.SPREADSHEET_ID }}
          commands: |
            [
              { "command": "getData", "args": { "range": "'QC'!A1:D52", "hasHeaderRow": true } }
            ]
        env:
          GSHEET_CLIENT_EMAIL: ${{ secrets.GSHEET_CLIENT_EMAIL }}
          GSHEET_PRIVATE_KEY: ${{ secrets.GSHEET_PRIVATE_KEY }}

  process-gsheet:
    runs-on: ubuntu-latest
    needs: fetch-gsheet
    outputs:
      qc-data: ${{ steps.get_input.outputs.result }}
    steps:
      - uses: actions/github-script@v7
        id: "get_input"
        env:
          GSHEET_STRING: ${{ needs.fetch-gsheet.outputs.gsheet-data }}
        with:
          result-encoding: string
          script: |
            // JavaScript code
            const { GSHEET_STRING } = process.env;
            const objects = JSON.parse(GSHEET_STRING);
            const entries = objects?.results[0]?.result?.formatted;
            const current_date = new Date().toLocaleDateString('en-US');
            const entry = entries.filter((data) => data['Date'] === current_date);
            return JSON.stringify(entry[0]);

  trigger-workflow:
    runs-on: ubuntu-latest
    needs: process-gsheet
    if: fromJson(needs.process-gsheet.outputs.qc-data).Date
    env:
      Keywords: ${{ fromJson(needs.process-gsheet.outputs.qc-data).Keywords }}
      Facets: ${{ fromJson(needs.process-gsheet.outputs.qc-data).Facets }}
      Datasets: ${{ fromJson(needs.process-gsheet.outputs.qc-data).Datasets }}
    steps:
      - name: Print date and generated inputs
        run: |
          echo "Date: ${{ fromJson(needs.process-gsheet.outputs.qc-data).Date }}"
          echo '{ "SEARCH_KEYWORDS": "${{ env.Keywords }}", "FILTER_FACETS": "${{ env.Facets }}", "DATASET_IDS": "${{ env.Datasets }}" }'

      - name: Invoke workflow with inputs
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: quality_control_cypress.yml
          inputs: '{ "SEARCH_KEYWORDS": "${{ env.Keywords }}", "FILTER_FACETS": "${{ env.Facets }}", "DATASET_IDS": "${{ env.Datasets }}" }'
